*----------------------------------------------------------------------*
***INCLUDE ZARBOL_CL.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&       Class LCL_APPLICATION
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS LCL_APPLICATION DEFINITION.
  PUBLIC SECTION.
   METHODS:
*     HANDLE_NODE_DOUBLE_CLICK
*       FOR EVENT NODE_DOUBLE_CLICK
*       OF CL_GUI_LIST_TREE
*       IMPORTING NODE_KEY,
     HANDLE_ITEM_DOUBLE_CLICK
       FOR EVENT ITEM_DOUBLE_CLICK
       OF CL_GUI_LIST_TREE
       IMPORTING NODE_KEY ITEM_NAME.
*     HANDLE_BUTTON_CLICK
*       FOR EVENT BUTTON_CLICK
*       OF CL_GUI_LIST_TREE
*       IMPORTING NODE_KEY ITEM_NAME,
*     HANDLE_LINK_CLICK
*       FOR EVENT LINK_CLICK
*       OF CL_GUI_LIST_TREE
*       IMPORTING NODE_KEY ITEM_NAME,
*     HANDLE_CHECKBOX_CHANGE
*       FOR EVENT CHECKBOX_CHANGE
*       OF CL_GUI_LIST_TREE
*       IMPORTING NODE_KEY ITEM_NAME CHECKED.
ENDCLASS.               "LCL_APPLICATION

CLASS LCL_APPLICATION IMPLEMENTATION.

*  METHOD  HANDLE_NODE_DOUBLE_CLICK.
*    " this method handles the node double click event of the tree
*    " control instance
*
*    " show the key of the double clicked node in a dynpro field
*    G_EVENT = 'NODE_DOUBLE_CLICK'.
*    TXT_OUT_DAY = 'NODE_KEY'.
*  ENDMETHOD.                    "HANDLE_NODE_DOUBLE_CLICK

  METHOD  HANDLE_ITEM_DOUBLE_CLICK.
    " this method handles the item double click event of the tree
    " control instance

    " show the key of the node and the name of the item
    " of the double clicked item in a dynpro field
    G_EVENT = 'ITEM_DOUBLE_CLICK'.
    aux = NODE_KEY.

    if aux ne c_nodekey-weeks.

      TXT_OUT_DAY = NODE_KEY.

    endif.

    if TXT_OUT_DAY+2(1) eq '/' .

     TXT_OUT_NAME = prueba-res.
*     NODE_KEY-

    else.

      clear TXT_OUT_NAME.

    endif.



  ENDMETHOD.                    "HANDLE_ITEM_DOUBLE_CLICK
*
*  METHOD  HANDLE_LINK_CLICK.
*    " this method handles the link click event of the tree
*    " control instance
*
*    " show the key of the node and the name of the item
*    " of the clicked link in a dynpro field
*    G_EVENT = 'LINK_CLICK'.
*    TXT_OUT_DAY = NODE_KEY.
*    TXT_OUT_NAME = ITEM_NAME.
*  ENDMETHOD.                    "HANDLE_LINK_CLICK
*
*  METHOD  HANDLE_BUTTON_CLICK.
*    " this method handles the button click event of the tree
*    " control instance
*
*    " show the key of the node and the name of the item
*    " of the clicked button in a dynpro field
*    G_EVENT = 'BUTTON_CLICK'.
*    TXT_OUT_DAY = NODE_KEY.
*    TXT_OUT_NAME = ITEM_NAME.
*  ENDMETHOD.                    "HANDLE_BUTTON_CLICK
*
*  METHOD  HANDLE_CHECKBOX_CHANGE.
*    " this method handles the checkbox_change event of the tree
*    " control instance
*
*    " show the key of the node and the name of the item
*    " of the clicked checkbox in a dynpro field
*    G_EVENT = 'CHECKBOX_CHANGE'.
*    TXT_OUT_DAY = NODE_KEY.
*    TXT_OUT_DAY = NODE_KEY.
*    TXT_OUT_NAME = ITEM_NAME.
*  ENDMETHOD.                    "HANDLE_CHECKBOX_CHANGE

ENDCLASS.
